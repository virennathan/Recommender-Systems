{'Q1': [0.15096, 0.14904], 'Q2': [0.13632, 0.13704], 'Q3': [10, 0.13632, 0.13704], 'Q4': [0.31552, 0.15064, 0.14064], 'Q5': [(0.015228426395939087, 'B00H7NFDKA'), (0.014492753623188406, 'B00QKVV3HC'), (0.014492753623188406, 'B00GXRMD7W'), (0.014084507042253521, 'B00H7ILRRI'), (0.014084507042253521, 'B0057RUMPO'), (0.014084507042253521, 'B000B6DTYW'), (0.013888888888888888, 'B00L2708TI'), (0.013513513513513514, 'B009Z1KKWI'), (0.013513513513513514, 'B000VYINCW'), (0.013333333333333334, 'B003F2BDZQ')], 'Q6': 1.7165666373341593, 'Q7': ['The heuristic behind the decay function is that reviews made closer in time to that of the target item (argument passed into predictRating) will be                   more indicitive of the correct rating. Some factors that could lead to this are consumer preferences changing over time, products iterating and                   improving over time, or to simply filter out older reviews that could introduce irrelevancies/noise in our prediction. I decided to go with the                   f(abs(t_u,i - t_u,j)) decay function. Applying this function as shown in the equation on the homework doc, I was able to slightly reduce the MSE                   over the trivial decay function (Question 6 MSE)', 1.6993689339769356]}
